{"ast":null,"code":"var _jsxFileName = \"/home/ym/FILES/A.A.U/Third_first_semester/Web programming/Assignements/Projectll/fitnation/react-frontend/src/components/QuotesCon.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quotes = () => {\n  _s();\n\n  function randomNumber(min, max) {\n    return parseInt(Math.random() * (max - min) + min);\n  }\n\n  let rand = randomNumber(0, 8);\n  const [quote, setQuote] = useState({});\n  let displayedQuote;\n  let quoteAuthor;\n  useEffect(() => {\n    const getQuotes = async () => {\n      const quote = await getQuote();\n      setQuote(quote);\n      displayedQuote = quote[0].quote;\n      quoteAuthor = quote[0].author;\n    };\n\n    getQuotes();\n  }, []);\n\n  async function getQuote() {\n    let response = await fetch('http://127.0.0.1:5000/api/quote/');\n    let quotes = await response.json();\n    return quotes;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center quoteCon\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote\",\n      children: displayedQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"author\",\n      children: [quoteAuthor, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quotes, \"BrqoDQIOzdPe1AwPN+/+lsQA01U=\");\n\n_c = Quotes;\nexport default Quotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"sources":["/home/ym/FILES/A.A.U/Third_first_semester/Web programming/Assignements/Projectll/fitnation/react-frontend/src/components/QuotesCon.js"],"names":["useState","useEffect","Quotes","randomNumber","min","max","parseInt","Math","random","rand","quote","setQuote","displayedQuote","quoteAuthor","getQuotes","getQuote","author","response","fetch","quotes","json"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,WAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,WAAOC,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAA/B,CAAf;AACH;;AACC,MAAIK,IAAI,GAAGN,YAAY,CAAC,CAAD,EAAG,CAAH,CAAvB;AAEE,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIY,cAAJ;AACA,MAAIC,WAAJ;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAMJ,KAAK,GAAG,MAAMK,QAAQ,EAA5B;AAEAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,MAAAA,cAAc,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASA,KAA1B;AACAG,MAAAA,WAAW,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASM,MAAvB;AACD,KAND;;AAQAF,IAAAA,SAAS;AACV,GAVM,EAUJ,EAVI,CAAT;;AAYA,iBAAeC,QAAf,GAAyB;AAErB,QAAIE,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA1B;AACA,QAAIC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,MAAP;AAED;;AAIH,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BAEI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,gBAEHP;AAFG;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA,iBAAuBC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9CD;;GAAMX,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst Quotes = () => {\n\n  function randomNumber(min, max) { \n    return parseInt(Math.random() * (max - min) + min)\n}\n  let rand = randomNumber(0,8)\n    \n    const [quote, setQuote] = useState({})\n    let displayedQuote\n    let quoteAuthor\n\n    useEffect(() => {\n        const getQuotes = async () => {\n          const quote = await getQuote()\n         \n          setQuote(quote)\n          displayedQuote = quote[0].quote\n          quoteAuthor = quote[0].author\n        }\n    \n        getQuotes()\n      }, [])\n\n    async function getQuote(){\n\n        let response = await fetch('http://127.0.0.1:5000/api/quote/');\n        let quotes = await response.json()\n        return quotes\n    \n      } \n \n\n\n    return (\n        <div className='text-center quoteCon'>\n\n            <p className='quote'>\n        \n        {displayedQuote}\n \n            </p>\n\n            <p className='author'>{quoteAuthor} </p>\n         \n        </div>\n    )\n}\n\nexport default Quotes\n"]},"metadata":{},"sourceType":"module"}