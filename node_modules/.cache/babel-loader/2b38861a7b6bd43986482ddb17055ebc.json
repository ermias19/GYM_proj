{"ast":null,"code":"var _jsxFileName = \"/home/ym/FILES/A.A.U/Third_first_semester/Web programming/Assignements/Projectll/fitnation/react-frontend/src/components/Status.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n(function ($) {\n  \"use strict\";\n\n  var JIndicator = function (ele, opt) {\n    this.$element = $(ele);\n    this.defaults = {\n      canvasHeight: 70,\n      canvasWidth: 500,\n      startX: 10,\n      barHeight: 12,\n      barWidth: 150,\n      barColor: {\n        left: '#7BD6FD',\n        middle: '#77DE8B',\n        right: '#FFC977'\n      },\n      indicatorColor: 'auto',\n      numberText: {\n        color: '#000000',\n        fontSize: 13,\n        fontFamily: 'Arial',\n        align: 'left',\n        fontHeight: 12\n      },\n      barValues: [],\n      indicatorValue: 0,\n      legend: {\n        data: ['low', 'middle', 'high'],\n        textColor: '#000000'\n      },\n      legendHeight: 15,\n      legendProperty: {\n        height: 15,\n        width: 24,\n        margin: 15,\n        radius: 4\n      }\n    };\n    this.options = $.extend({}, this.defaults, this.options, typeof opt === 'object' && opt);\n  }; // Collection method.\n\n\n  $.fn.JIndicator = function (options) {\n    return this.each(function () {\n      var self = this;\n\n      if (self.indicator === undefined) {\n        self.indicator = new JIndicator(this, options);\n      } else {\n        self.indicator.options = $.extend({}, self.indicator.options, options);\n      }\n\n      return self.indicator.drawCanvas(self);\n    });\n  };\n\n  function initProperty(canvas, context, options) {\n    if (options.legend && options.legend.data && options.legend.data.length === 3) {\n      options.middleHeight = options.canvasHeight / 2 + options.legendHeight;\n    } else {\n      options.middleHeight = options.canvasHeight / 2;\n    }\n\n    options.tHeight = options.barHeight * Math.sin(Math.PI / 3);\n    options.triangleHeight = options.tHeight + 8;\n    canvas.height += 0;\n    context.font = options.numberText.fontSize + 'px ' + options.numberText.fontFamily;\n    context.textAlign = options.numberText.align;\n  } // left\n\n\n  function drawLeft(context, options) {\n    context.beginPath();\n    context.moveTo(options.startX, options.middleHeight);\n    context.lineTo(options.startX + options.triangleHeight, options.middleHeight - options.barHeight / 2);\n    context.lineTo(options.startX + options.triangleHeight, options.middleHeight + options.barHeight / 2);\n    context.fillStyle = options.barColor.left;\n    context.fill();\n    context.closePath();\n    context.fillRect(options.startX + options.triangleHeight, options.middleHeight - options.barHeight / 2, options.barWidth - options.triangleHeight, options.barHeight);\n  } // middle\n\n\n  function drawMiddle(context, options) {\n    context.fillStyle = options.barColor.middle;\n    context.fillRect(options.startX + options.barWidth, options.middleHeight - options.barHeight / 2, options.barWidth, options.barHeight);\n  } // right\n\n\n  function drawRight(context, options) {\n    context.fillStyle = options.barColor.right;\n    context.fillRect(options.startX + options.barWidth * 2, options.middleHeight - options.barHeight / 2, options.barWidth - options.triangleHeight, options.barHeight);\n    context.beginPath();\n    context.moveTo(options.startX + options.barWidth * 3, options.middleHeight);\n    context.lineTo(options.startX + options.barWidth * 3 - options.triangleHeight, options.middleHeight - options.barHeight / 2);\n    context.lineTo(options.startX + options.barWidth * 3 - options.triangleHeight, options.middleHeight + options.barHeight / 2);\n    context.fill();\n    context.closePath();\n  }\n\n  function drawRoundRect(context, x, y, width, height, radius, color) {\n    context.beginPath();\n    context.arc(x + radius, y + radius, radius, Math.PI, Math.PI * 3 / 2);\n    context.lineTo(width - radius + x, y);\n    context.arc(width - radius + x, radius + y, radius, Math.PI * 3 / 2, Math.PI * 2);\n    context.lineTo(width + x, height + y - radius);\n    context.arc(width - radius + x, height - radius + y, radius, 0, Math.PI / 2);\n    context.lineTo(radius + x, height + y);\n    context.arc(radius + x, height - radius + y, radius, Math.PI / 2, Math.PI);\n    context.fillStyle = color;\n    context.fill();\n    context.closePath();\n  } // Legend\n\n\n  function drawLegend(context, options) {\n    var textMargin = options.legendProperty.margin / 3,\n        metrics,\n        y = 5,\n        x = options.canvasWidth / 2,\n        leftWidth = options.legendProperty.margin + options.legendProperty.width + context.measureText(options.legend.data[0]).width,\n        halfMiddleWidth;\n    halfMiddleWidth = (options.legendProperty.width + context.measureText(options.legend.data[1]).width + textMargin) / 2;\n    leftWidth = options.legendProperty.width + context.measureText(options.legend.data[0]).width + textMargin;\n    x = x - halfMiddleWidth - leftWidth - options.legendProperty.margin;\n    drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.left);\n    context.fillStyle = options.legend.textColor;\n    context.fillText(options.legend.data[0], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n    x = x + leftWidth + options.legendProperty.margin;\n    drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.middle);\n    context.fillStyle = options.legend.textColor;\n    context.fillText(options.legend.data[1], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n    x = x + halfMiddleWidth * 2 + options.legendProperty.margin;\n    drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.right);\n    context.fillStyle = options.legend.textColor;\n    context.fillText(options.legend.data[2], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n  }\n\n  function getIndicatorInfo(options) {\n    var min = 0,\n        max = 0,\n        retValue = {\n      color: options.barColor.left,\n      positionX: options.startX,\n      positionArcY: options.middleHeight - options.barHeight - 4,\n      positionTriY: options.middleHeight - options.barHeight / 2 - 1\n    }; // return zero\n\n    if (isNaN(options.indicatorValue)) {\n      return retValue;\n    } // must have two values\n\n\n    if (options.barValues.length < 3 || isNaN(options.barValues[1]) || isNaN(options.barValues[2])) {\n      return retValue;\n    }\n\n    retValue.color = options.barColor.left;\n\n    if (options.indicatorValue < options.barValues[1]) {\n      if (isNaN(options.barValues[0])) {\n        retValue.positionX = options.startX + options.barWidth / 2;\n        return retValue;\n      } else {\n        if (options.indicatorValue < options.barValues[0]) {\n          retValue.positionX = options.startX;\n          return retValue;\n        } else {\n          retValue.positionX = options.startX + options.barWidth * (options.indicatorValue - options.barValues[0]) / (options.barValues[1] - options.barValues[0]);\n          return retValue;\n        }\n      }\n    } else if (options.indicatorValue === options.barValues[1]) {\n      retValue.positionX = options.startX + options.barWidth;\n      retValue.color = options.barColor.middle;\n      return retValue;\n    }\n\n    retValue.color = options.barColor.right;\n\n    if (options.indicatorValue > options.barValues[2]) {\n      if (options.barValues.length === 3 || isNaN(options.barValues[3])) {\n        retValue.positionX = options.startX + options.barWidth * 2 + options.barWidth / 2;\n        return retValue;\n      } else {\n        if (options.indicatorValue > options.barValues[3]) {\n          retValue.positionX = options.startX + options.barWidth * 3;\n          return retValue;\n        } else {\n          retValue.positionX = options.startX + options.barWidth * 2 + options.barWidth * (options.indicatorValue - options.barValues[2]) / (options.barValues[3] - options.barValues[2]);\n          return retValue;\n        }\n      }\n    } else if (options.indicatorValue === options.barValues[2]) {\n      retValue.positionX = options.startX + options.barWidth * 2;\n      return retValue;\n    }\n\n    retValue.color = options.barColor.middle;\n    retValue.positionX = options.startX + options.barWidth + options.barWidth * (options.indicatorValue - options.barValues[1]) / (options.barValues[2] - options.barValues[1]);\n    return retValue;\n  } // Indicator\n\n\n  function drawIndicator(context, options) {\n    var color = options.indicatorColor,\n        position = getIndicatorInfo(options);\n\n    if (color !== 'auto') {\n      position.color = color;\n    }\n\n    context.beginPath(); // half circle\n\n    context.arc(position.positionX, options.middleHeight - options.barHeight - 4, options.barHeight / 2, 0, Math.PI, 1);\n    context.fillStyle = position.color;\n    context.fill(); // triangle\n\n    context.moveTo(position.positionX - options.barHeight / 2 - 1, position.positionArcY);\n    context.lineTo(position.positionX, position.positionTriY);\n    context.lineTo(position.positionX + options.barHeight / 2 + 1, position.positionArcY);\n    context.fillStyle = position.color;\n    context.fill();\n    context.closePath(); // draw Indicator number text\n\n    context.fillText(options.indicatorValue, position.positionX + options.barHeight / 2 + 3, position.positionTriY - options.triangleHeight / 6);\n  } // Number\n\n\n  function drawNumber(context, options) {\n    var metrics, i, positonX;\n    context.fillStyle = options.numberText.color;\n\n    for (i = 0; i < options.barValues.length; i += 1) {\n      if (!isNaN(options.barValues[i])) {\n        positonX = options.startX + options.barWidth * i;\n        metrics = context.measureText(options.barValues[i]);\n        context.fillText(options.barValues[i], positonX - metrics.width / 2, options.middleHeight + options.barHeight / 2 + options.numberText.fontHeight + 3);\n      }\n    }\n  }\n\n  function draw($element, options) {\n    // \n    var canvas, context, sCanvas;\n    options.canvasWidth = options.barWidth * 3 + options.startX * 2;\n\n    if ($element.find('#jIndicatorCanvas').length === 0) {\n      // ...\n      options.canvasHeight = options.canvasHeight * 2;\n      options.canvasWidth = options.canvasWidth * 2;\n      options.barHeight = options.barHeight * 2;\n      options.barWidth = options.barWidth * 2;\n      options.numberText.fontHeight = options.numberText.fontHeight * 2;\n      options.numberText.fontSize = options.numberText.fontSize * 2;\n      options.legendHeight = options.legendHeight * 2;\n      options.legendProperty.height = options.legendProperty.height * 2;\n      options.legendProperty.width = options.legendProperty.width * 2;\n      options.legendProperty.margin = options.legendProperty.margin * 2;\n      options.legendProperty.radius = options.legendProperty.radius * 2;\n      sCanvas = '<canvas id=\"jIndicatorCanvas\" width=\"' + options.canvasWidth + '\" height=\"' + options.canvasHeight + '\"';\n      sCanvas += ' style=\"width: ' + options.canvasWidth / 2 + 'px; height: ' + options.canvasHeight / 2 + 'px;\"';\n      sCanvas += '></canvas>';\n      $element.append(sCanvas);\n    }\n\n    canvas = $element.find('#jIndicatorCanvas').get(0);\n    context = canvas.getContext(\"2d\");\n    initProperty(canvas, context, options); // Left\n\n    drawLeft(context, options); // Middle\n\n    drawMiddle(context, options); // Right\n\n    drawRight(context, options); // Legend\n\n    if (options.legend && options.legend.data && options.legend.data.length === 3) {\n      drawLegend(context, options);\n    } // Indicator\n\n\n    drawIndicator(context, options); // Number\n\n    drawNumber(context, options);\n  }\n\n  JIndicator.prototype = {\n    drawCanvas: function (self) {\n      draw(this.$element, this.options);\n      return self.indicator;\n    }\n  };\n})(jQuery);\n\nconst Status = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"BMI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"Exercise plan:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"Body fat percentage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"Week:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"Average calorie intake(needed):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mt-5\",\n          children: \"Diffculty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Status;\nexport default Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["/home/ym/FILES/A.A.U/Third_first_semester/Web programming/Assignements/Projectll/fitnation/react-frontend/src/components/Status.js"],"names":["$","JIndicator","ele","opt","$element","defaults","canvasHeight","canvasWidth","startX","barHeight","barWidth","barColor","left","middle","right","indicatorColor","numberText","color","fontSize","fontFamily","align","fontHeight","barValues","indicatorValue","legend","data","textColor","legendHeight","legendProperty","height","width","margin","radius","options","extend","fn","each","self","indicator","undefined","drawCanvas","initProperty","canvas","context","length","middleHeight","tHeight","Math","sin","PI","triangleHeight","font","textAlign","drawLeft","beginPath","moveTo","lineTo","fillStyle","fill","closePath","fillRect","drawMiddle","drawRight","drawRoundRect","x","y","arc","drawLegend","textMargin","metrics","leftWidth","measureText","halfMiddleWidth","fillText","getIndicatorInfo","min","max","retValue","positionX","positionArcY","positionTriY","isNaN","drawIndicator","position","drawNumber","i","positonX","draw","sCanvas","find","append","get","getContext","prototype","jQuery","Status"],"mappings":"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","sourcesContent":["(function ($) {\n\n    \"use strict\";\n    \n    var JIndicator = function (ele, opt) {\n        this.$element = $(ele);\n        this.defaults = {\n            canvasHeight: 70,\n            canvasWidth: 500,\n            startX: 10,\n            barHeight: 12,\n            barWidth: 150,\n            barColor: {\n                left: '#7BD6FD',\n                middle: '#77DE8B',\n                right: '#FFC977'\n            },\n            indicatorColor: 'auto',\n            numberText: {\n                color: '#000000',\n                fontSize: 13,\n                fontFamily: 'Arial',\n                align: 'left',\n                fontHeight: 12\n            },\n            barValues: [],\n            indicatorValue: 0,\n            legend: {\n                data: ['low', 'middle', 'high'],\n                textColor: '#000000'\n            },\n            legendHeight: 15,\n            legendProperty : {\n                height: 15,\n                width: 24,\n                margin: 15,\n                radius: 4\n            }\n        };\n        this.options = $.extend({}, this.defaults, this.options, typeof opt === 'object' && opt);\n    };\n    \n    // Collection method.\n    $.fn.JIndicator = function (options) {\n        return this.each(function () {\n            var self = this;\n            \n            if (self.indicator === undefined) {\n                self.indicator = new JIndicator(this, options);\n            } else {\n                self.indicator.options = $.extend({}, self.indicator.options, options);\n            }\n            \n            return self.indicator.drawCanvas(self);\n        });\n    };\n    \n    function initProperty(canvas, context, options) {\n        \n        if (options.legend && options.legend.data && options.legend.data.length === 3) {\n            options.middleHeight = (options.canvasHeight / 2) + options.legendHeight;\n        } else {\n            options.middleHeight = options.canvasHeight / 2;\n        }\n        options.tHeight = options.barHeight * Math.sin(Math.PI / 3);\n        options.triangleHeight = options.tHeight + 8;\n        \n        canvas.height += 0;\n        \n        context.font = (options.numberText.fontSize + 'px ' + options.numberText.fontFamily);\n        context.textAlign = options.numberText.align;\n    }\n\n    // left\n    function drawLeft(context, options) {\n        context.beginPath();\n        context.moveTo(options.startX, options.middleHeight);\n        context.lineTo(options.startX + options.triangleHeight, options.middleHeight - options.barHeight / 2);\n        context.lineTo(options.startX + options.triangleHeight, options.middleHeight + options.barHeight / 2);\n        context.fillStyle = options.barColor.left;\n        context.fill();\n        context.closePath();\n        context.fillRect(options.startX + options.triangleHeight, options.middleHeight - options.barHeight / 2,\n                         options.barWidth - options.triangleHeight, options.barHeight);\n    }\n\n    // middle\n    function drawMiddle(context, options) {\n        context.fillStyle = options.barColor.middle;\n        context.fillRect(options.startX + options.barWidth, options.middleHeight - options.barHeight / 2, options.barWidth, options.barHeight);\n    }\n\n    // right\n    function drawRight(context, options) {\n        context.fillStyle = options.barColor.right;\n        context.fillRect(options.startX + options.barWidth * 2, options.middleHeight - options.barHeight / 2,\n                         options.barWidth - options.triangleHeight, options.barHeight);\n        context.beginPath();\n        context.moveTo(options.startX + options.barWidth * 3, options.middleHeight);\n        context.lineTo(options.startX + options.barWidth * 3 - options.triangleHeight, options.middleHeight - options.barHeight / 2);\n        context.lineTo(options.startX + options.barWidth * 3 - options.triangleHeight, options.middleHeight + options.barHeight / 2);\n        context.fill();\n        context.closePath();\n    }\n    \n    function drawRoundRect(context, x, y, width, height, radius, color) {\n        context.beginPath();\n        context.arc(x + radius, y + radius, radius, Math.PI, Math.PI * 3 / 2);\n        context.lineTo(width - radius + x, y);\n        context.arc(width - radius + x, radius + y, radius, Math.PI * 3 / 2, Math.PI * 2);\n        context.lineTo(width + x, height + y - radius);\n        context.arc(width - radius + x, height - radius + y, radius, 0, Math.PI / 2);\n        context.lineTo(radius + x, height + y);\n        context.arc(radius + x, height - radius + y, radius, Math.PI / 2, Math.PI);\n        context.fillStyle = color;\n        context.fill();\n        context.closePath();\n    }\n    \n    // Legend\n    function drawLegend(context, options) {\n        var textMargin = options.legendProperty.margin / 3,\n            metrics,\n            y = 5,\n            x = options.canvasWidth / 2,\n            leftWidth = options.legendProperty.margin + options.legendProperty.width + context.measureText(options.legend.data[0]).width,\n            halfMiddleWidth;\n        \n        halfMiddleWidth = (options.legendProperty.width + context.measureText(options.legend.data[1]).width + textMargin) / 2;\n        leftWidth = options.legendProperty.width + context.measureText(options.legend.data[0]).width + textMargin;\n        \n        x = x - halfMiddleWidth - leftWidth - options.legendProperty.margin;\n        drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.left);\n        context.fillStyle = options.legend.textColor;\n        context.fillText(options.legend.data[0], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n        \n        x = x + leftWidth + options.legendProperty.margin;\n        drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.middle);\n        context.fillStyle = options.legend.textColor;\n        context.fillText(options.legend.data[1], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n        \n        x = x + halfMiddleWidth * 2 + options.legendProperty.margin;\n        drawRoundRect(context, x, y, options.legendProperty.width, options.legendProperty.height, options.legendProperty.radius, options.barColor.right);\n        context.fillStyle = options.legend.textColor;\n        context.fillText(options.legend.data[2], x + options.legendProperty.width + textMargin, y + options.legendProperty.height - 5);\n    }\n\n    function getIndicatorInfo(options) {\n        var min = 0,\n            max = 0,\n            retValue = {\n                color: options.barColor.left,\n                positionX: options.startX,\n                positionArcY: options.middleHeight - options.barHeight - 4,\n                positionTriY: options.middleHeight - options.barHeight / 2 - 1\n            };\n        // return zero\n        if (isNaN(options.indicatorValue)) {\n            return retValue;\n        }\n        // must have two values\n        if (options.barValues.length < 3 || isNaN(options.barValues[1]) || isNaN(options.barValues[2])) {\n            return retValue;\n        }\n        \n        retValue.color = options.barColor.left;\n        if (options.indicatorValue < options.barValues[1]) {\n            if (isNaN(options.barValues[0])) {\n                retValue.positionX = options.startX + options.barWidth / 2;\n                return retValue;\n            } else {\n                if (options.indicatorValue < options.barValues[0]) {\n                    retValue.positionX = options.startX;\n                    return retValue;\n                } else {\n                    retValue.positionX = options.startX + options.barWidth * (options.indicatorValue - options.barValues[0]) / (options.barValues[1] - options.barValues[0]);\n                    return retValue;\n                }\n            }\n        } else if (options.indicatorValue === options.barValues[1]) {\n            retValue.positionX = options.startX + options.barWidth;\n            retValue.color = options.barColor.middle;\n            return retValue;\n        }\n        \n        retValue.color = options.barColor.right;\n        if (options.indicatorValue > options.barValues[2]) {\n            if (options.barValues.length === 3 || isNaN(options.barValues[3])) {\n                retValue.positionX = options.startX + options.barWidth * 2 + options.barWidth / 2;\n                return retValue;\n            } else {\n                if (options.indicatorValue > options.barValues[3]) {\n                    retValue.positionX = options.startX + options.barWidth * 3;\n                    return retValue;\n                } else {\n                    retValue.positionX = options.startX + options.barWidth * 2 + options.barWidth * (options.indicatorValue - options.barValues[2]) / (options.barValues[3] - options.barValues[2]);\n                    return retValue;\n                }\n            }\n        } else if (options.indicatorValue === options.barValues[2]) {\n            retValue.positionX = options.startX + options.barWidth * 2;\n            return retValue;\n        }\n        \n        retValue.color = options.barColor.middle;\n        retValue.positionX = options.startX + options.barWidth\n            + options.barWidth * (options.indicatorValue - options.barValues[1]) / (options.barValues[2] - options.barValues[1]);\n        return retValue;\n    }\n    \n    // Indicator\n    function drawIndicator(context, options) {\n        var color = options.indicatorColor,\n            position = getIndicatorInfo(options);\n        \n        if (color !== 'auto') {\n            position.color = color;\n        }\n        \n        context.beginPath();\n        // half circle\n        context.arc(position.positionX, options.middleHeight - options.barHeight - 4, options.barHeight / 2, 0, Math.PI, 1);\n        context.fillStyle = position.color;\n        context.fill();\n        // triangle\n        context.moveTo(position.positionX - options.barHeight / 2 - 1, position.positionArcY);\n        context.lineTo(position.positionX,  position.positionTriY);\n        context.lineTo(position.positionX + options.barHeight / 2 + 1,  position.positionArcY);\n        context.fillStyle = position.color;\n        context.fill();\n        context.closePath();\n        \n        // draw Indicator number text\n        context.fillText(options.indicatorValue,\n                         position.positionX + options.barHeight / 2 + 3, position.positionTriY - options.triangleHeight / 6);\n    }\n\n    // Number\n    function drawNumber(context, options) {\n        var metrics,\n            i,\n            positonX;\n      \n        context.fillStyle = options.numberText.color;\n      \n        for (i = 0; i < options.barValues.length; i += 1) {\n            if (!isNaN(options.barValues[i])) {\n                positonX = options.startX + options.barWidth * i;\n                metrics = context.measureText(options.barValues[i]);\n                context.fillText(options.barValues[i], positonX - metrics.width / 2,\n                             options.middleHeight + options.barHeight / 2 + options.numberText.fontHeight + 3);\n            }\n        }\n    }\n    \n    function draw($element, options) {\n        // \n        var canvas,\n            context,\n            sCanvas;\n        \n        options.canvasWidth = options.barWidth * 3 + options.startX * 2;\n        if ($element.find('#jIndicatorCanvas').length === 0) {\n            // ...\n            options.canvasHeight = options.canvasHeight * 2;\n            options.canvasWidth = options.canvasWidth * 2;\n            options.barHeight = options.barHeight * 2;\n            options.barWidth = options.barWidth * 2;\n            options.numberText.fontHeight = options.numberText.fontHeight * 2;\n            options.numberText.fontSize = options.numberText.fontSize * 2;\n            options.legendHeight = options.legendHeight * 2;\n            options.legendProperty.height = options.legendProperty.height * 2;\n            options.legendProperty.width = options.legendProperty.width * 2;\n            options.legendProperty.margin = options.legendProperty.margin * 2;\n            options.legendProperty.radius = options.legendProperty.radius * 2;\n            \n            sCanvas = '<canvas id=\"jIndicatorCanvas\" width=\"' + options.canvasWidth + '\" height=\"' + options.canvasHeight + '\"';\n            sCanvas += ' style=\"width: ' + options.canvasWidth / 2 + 'px; height: ' + options.canvasHeight / 2 + 'px;\"';\n            sCanvas += '></canvas>';\n            $element.append(sCanvas);\n        }\n        canvas = $element.find('#jIndicatorCanvas').get(0);\n        context = canvas.getContext(\"2d\");\n        \n        initProperty(canvas, context, options);\n        \n        // Left\n        drawLeft(context, options);\n\n        // Middle\n        drawMiddle(context, options);\n\n        // Right\n        drawRight(context, options);\n        \n        // Legend\n        if (options.legend && options.legend.data && options.legend.data.length === 3) {\n            drawLegend(context, options);\n        }\n\n        // Indicator\n        drawIndicator(context, options);\n\n        // Number\n        drawNumber(context, options);\n    }\n    \n    JIndicator.prototype = {\n        drawCanvas: function (self) {\n            draw(this.$element, this.options);\n            return self.indicator;\n        }\n    };\n\n}(jQuery));\n\nconst Status = () => {\n\n\n    return (\n        <div className='text-center'>\n\n            <div className='status'>\n\n                <div className='row'>\n                    <div className='col-6 mt-5'>BMI:</div>\n\n                    \n\n                    <div className='col-6 mt-5'>Exercise plan:</div>\n                </div>\n\n                <div className='row'>\n                    <div className='col-6 mt-5'>Body fat percentage:</div>\n                    <div className='col-6 mt-5'>Week:</div>\n                </div>\n\n                <div className='row'>\n                    <div className='col-6 mt-5'>Average calorie intake(needed):</div>\n                    <div className='col-6 mt-5'>Diffculty:</div>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Status\n"]},"metadata":{},"sourceType":"module"}